{
  "swagger": "2.0",
  "info": {
    "description": "This is API documentation for [Conformal Prediction based Virtual Screening](https://github.com/laeeq80/spark-cpvs-vina). The API is responsible for three web services i.e. providing ready-made prediction profiles for compounds, real-time docking for small number of molecules and a predictive on-demand docking service for large-scale compound profile generation (last one not ready yet). \n\nA profile contains ligand id, its prediction and docking score (if available) against multiple receptors.",
    "title": "Docking Profile As A Service (DPAAS) API Documentation",
    "version": "0.0.3-beta"
  },
  "host": "",
  "schemes": [
    "http"
  ],
  "basePath": "/",
  "paths": {
    "/receptors": {
      "get": {
        "tags": [
          "Receptor"
        ],
        "summary": "Get a list of available receptor models",
        "description": "Gives a list of receptor models available in the database. This is useful if the user is unsure which models are available in the database.",
        "operationId": "receptorList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Receptors"
              }
            }
          },
          "503": {
            "description": "Docking Profile Service Not available"
          }
        }
      }
    },
    "/ligands": {
      "get": {
        "tags": [
          "Ligand"
        ],
        "summary": "Get a sample of available ligands",
        "description": "Gives a sample (not random) of ligands available in the database. This is useful if the user wants to test API and unsure which ligands are available in the database.",
        "operationId": "sampleLigands",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ligands"
              }
            }
          },
          "503": {
            "description": "Docking Profile Service Not available"
          }
        }
      }
    },
    "/ligands/{lid}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get ligand predictive profile by id",
        "description": "Takes in ligand id and returns its profile including id, score, prediction, receptor(s) name and receptor(s) PDB code. ",
        "operationId": "profileByLigandId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Ligand id that need to be considered for profiling"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Profile"
              }
            }
          },
          "400": {
            "description": "Invalid Ligand Id"
          },
          "404": {
            "description": "Ligand Profile Not Found"
          },
          "405": {
            "description": "Ligand Profile Not Found"
          }
        }
      }
    },
    "/ligands/{lid}/rName/{rName}/rPdbCode/{rPdbCode}": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Make predictions for a new ligand",
        "description": "Takes in ligand id, receptor name and receptor pdb Code and make prediction against the selected receptor model and save the prediction. This is useful if ligand prediction is not already available in the database. The operation downloads new molecule from zinc and predict it against ready made models.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "description": "Ligand id that need to be considered for profiling",
            "required": true,
            "type": "string"
          },
          {
            "name": "rName",
            "in": "path",
            "description": "Receptor Name relevant to model against which profiling needed to be performed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rPdbCode",
            "in": "path",
            "description": "Receptor PDB code relevant to model against which profiling needed to be performed.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Prediction"
              }
            }
          },
          "400": {
            "description": "Incorrect ligand id or receptor name or receptor pdbCode"
          }
        }
      }
    },
    "/scoreByLid/{lid}/rName/{rName}/rPdbCode/{rPdbCode}": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Docks a new ligand",
        "description": "Takes in ligand id, receptor name and receptor pdb Code and docks ligand against the selected receptor and save the score. This is useful if the docking score is not already available in the database. The operation downloads new molecule from zinc and docks it against ready made models.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "description": "Ligand id that need to be considered for docking",
            "required": true,
            "type": "string"
          },
          {
            "name": "rName",
            "in": "path",
            "description": "Receptor Name against which docking needed to be performed",
            "required": true,
            "type": "string"
          },
          {
            "name": "rPdbCode",
            "in": "path",
            "description": "Receptor PDB code against which docking needed to be performed",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Score"
              }
            }
          },
          "400": {
            "description": "Incorrect ligand id or receptor name or receptor pdbCode"
          }
        }
      }
    }
  },
  "definitions": {
    "Profile": {
      "type": "object",
      "required": [
        "l_id"
      ],
      "properties": {
        "l_id": {
          "type": "string",
          "example": "ZINC12954835"
        },
        "l_score": {
          "type": "string",
          "example": "-4.5"
        },
        "l_prediction": {
          "type": "string",
          "example": "BAD"
        },
        "r_name": {
          "type": "string",
          "example": "hiv1_protease"
        },
        "r_pdbCode": {
          "type": "string",
          "example": "1AJV"
        }
      }
    },
    "Prediction": {
      "type": "object",
      "properties": {
        "l_prediction": {
          "type": "string",
          "example": "BAD"
        }
      }
    },
    "Score": {
      "type": "object",
      "properties": {
        "l_score": {
          "type": "string",
          "example": "-3.9"
        }
      }
    },
    "Receptors": {
      "type": "object",
      "properties": {
        "r_name": {
          "type": "string",
          "example": "hiv1_protease"
        },
        "r_pdbCode": {
          "type": "string",
          "example": "1AJV"
        }
      }
    },
    "Ligands": {
      "type": "string",
      "example": "ZINC12954835"
    }
  }
}
